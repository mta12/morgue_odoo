Module de gestion d'une morgue dans ODOO12

BD odoo21-test
localhost:8069

GIT 
tobiemanga@gmail.com 
mta12 
https://github.com/mta12/morgue_odoo.git

git init
git add README.md ou git add -A
git status
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/mta12/morgue_odoo.git
git push -u origin main

***********************
LES FONCTIONNALITES 
***********************
$$ Description
- (Le receptionniste) Arrivée d'un mort prendre les informations sur 
le defunt (nom, prénom, date de decces, date d'enregistrement, date de sortie estimée) 
et son responsable (nom, prénom, téléphone, lien avec le defunt, numero cni)
- (Le receptionniste) Une fois enregistré, un coffre lui est attribué (salle, numéro, prix journalier, 
disponible) selon la disponibilité.
- A la sortie, une facture est élaborée puis payée, cela déclanche la libération du coffre concerné
- le paiment se fait en cach
- (Le responsable) peut faire tout ce que le receptionniste fait 
    Il a accès au bilan des entrées, sorties (incluant le bilan financier) selon des périodes 
    à définir (entre 2 dates)
    Administration des coffres

*****************
ANALYSE TECHNIQUE
********************
- Les utilisateurs font partis du personnel donc le module de GRH peut etre utile 
- Les informations sur le defunt et son responsable ( ce sont des personnes) donc on peut réutiliser 
le profile existant en ajoutant les informations nécessaires (ON va hériter des meme interfaces)
- hériter de sale pour les opérations financières comme le workflow d'un paeiment: 
- Les coffres sont des produits qu'on loue pour une période


******
TAF
******
- création initiale des modèles: 
    Coffres, 
    Defunt (Defunt) et Responsable_defunt (ce sont des clients qu'Odoo gere déjà),
        La commande (quotation) intégrer les deux champs (defunt et respo) à la place de client 
            Inclure les champs nécessaires
        changer les infos de base de création d'un client 
    Utilisateur, Administrateur

""TOUJOURS DANS LA REFLEXION""

$ revoir le modèle de Defunt car le modele res.partner inclut déja assez d'attributs pour nous, il manque
juste l'état de vie, les différentes dates. Il ya déja le nom. Donc Defunt sera un modèle qui 
héritera de res.partner
$ ça sera pareil pour Responsable_defunt, on a déjà nom et telephone, on va ajouter le lien avec le defunt 
la cni. 
$ On peut introduire un codebar à chaque défunt : Un code est valide  tant que le mort est en invalidité financière: tant qu'il n'a pas 
réglé sa dette avec la morgue. 

****************************
TACHES ACCOMPLIES
****************************
$ Manifest -- OK
$ icon image -- OK

P76 Daniel Reis
- creation de l'application:
    1- logo 
    2- top menu item 
    3- groupes de sécurité (user and manager levels) : on cré les catégories d'utilisateurs dans le xml 
    puis on les utilise dans le csv pour définir les éléments de sécurité

- creation de test 
    - Le modele de mort sera appelé Cadavre. 
P85 -- PB avec le test ça ne retourne aucun résultat (ça n'a pas marché car la BD manquait 
    de donnée)
donc odoo-test n'a pas de données démo 
ce qui est le cas pour odoo21-test

--les règles de sécurité aident à limiter l'accès à une information 
    On définit la règle et on l'applique au groupe d'employés

-- <data noupdate="1"> : élément créé à l'installation du module et pas modifié à 
    sa mise à jour. Mettre à 0 quand on veut faire une mise à niveau

#### LES VUES 

- The <act_window> element defines a client-side window action that will open 
the library.book model with the tree and form views enabled, in that order
- The <menuitem> defines a top menu item that calls the action_library_book
action, which was defined before

P96